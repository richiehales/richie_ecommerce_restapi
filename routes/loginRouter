const express = require('express');
const app = express();

// Allow info form login / register .ejs to be accessed (req.body.first_name)
app.use(express.urlencoded({ extended: false }))

app.use(express.json()); 
const loginRouter = express.Router();
const loginInstance = require('../models/login.js');

const bcrypt = require('bcrypt');



// Display Home page
// http://localhost:3000/login/auth
loginRouter.get('/auth', (req, res) => {
  res.render('index.ejs')
});


// Display Register page
// http://localhost:3000/login/auth/register
loginRouter.get('/auth/register', (req, res) => {
  res.render('register.ejs')
});


// Add / Register user to user_info table
loginRouter.post('/auth/register', async (req, res) => {
  try {
    const hashedPassword = await bcrypt.hash(req.body.password, 3)
    const email = req.body.email
    const first_name = req.body.first_name
    const last_name = req.body.last_name


    if (!hashedPassword || !email || !first_name || !last_name) {
      return res.status(400).send('Please provide password, email, first_name and last_name in the request body.');
    }

    const registrationResult = await loginInstance.registerUser(hashedPassword, email, first_name, last_name);

    if (registrationResult.success) {
      // Successfully registered
      console.log('success')
      res.redirect('/login/auth/login');

    } else {
      // Failed registration
      console.log('fail')
      res.redirect('/login/auth/register')
    }
  } catch (error) {
    console.error('Error:', error); // Log the error to the console
    res.status(500).send('Internal Server Error');
  }
});


// Display Login page
// http://localhost:3000/login/auth/login
loginRouter.get('/auth/login', (req, res) => {
  res.render('login.ejs')
});


module.exports = loginRouter
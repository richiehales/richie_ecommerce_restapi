openapi: 3.0.3
info:
  title: Ecommerce Portfolio Project (part one)
  version: 1.0.0
  description: Backend (part one) of the Codecademy ecommerce portfolio project
paths:
  /product:
    summary: Get all product data.
    description: Retrieves all products.
    get:
      summary: Gets product data.
      description: Retrieve product data.
      operationId: get_products
      responses:
        default:
          description: Default error sample response
      tags:
        - Products
  /product/{id}:
    summary: Get product by id.
    description: Retrieves the product with a specific id.
    get:
      summary: Get product by id.
      description: Retrieves product with the given id.
      operationId: get_product_by_id
      parameters:
        - name: id
          in: path
          description: ID of the product
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Products
  /product/categories/{category}:
    summary: Get products by category.
    description: Retrieves products by a given category.
    get:
      summary: Get products by category.
      description: Retrieves products by a given category.
      operationId: get_products_by_category
      parameters:
        - name: category
          in: path
          description: Category of the product
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default error sample response
      tags:
        - Products
  /product/delete/{id}:
    summary: Delete product by id,
    description: Retrieves product by a given id
    delete:
      summary: Delete product by id.
      description: Deletes poduct by a given id.
      operationId: delete_product_by_id
      parameters:
        - name: id
          in: path
          description: Id of the product
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default error sample response
      tags:
        - Products
  /product/addProduct:
    summary: Add a new product
    description: Add a new product.
    post:
      summary: Add a new product
      description: Add a new product
      operationId: add_new_product
      responses:
        default:
          description: Default error sample response
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
                category:
                  type: string
            examples:
              example1:
                value:
                  name: "Socks 6"
                  price: 7.99
                  description: "Lightweight and breathable socks"
                  category: "socks"
  /product/updateProduct/{id}:
    summary: Update product by id
    description: Update product by given id.
    put:
      summary: Update existing product
      description: Update existing product by given id
      operationId: update_product
      responses:
        default:
          description: Default error sample response
      parameters:
        - name: id
          in: path
          description: Id of the product
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                description:
                  type: string
                category:
                  type: string
            examples:
              example1:
                value:
                  name: "Updated Socks"
                  price: 9.99
                  description: "Updated description"
                  category: "updated-category"
      tags:
        - Products
  /user:
    summary: Get all users
    description: Retrieves all users.
    get:
      summary: Retrieves all users.
      description: Retrieves all users.
      operationId: get_users
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
  /user/{id}:
    summary: Get user by id
    description: Retrieves user by given id.
    get:
      summary: Get user details
      description: Get user details by given id.
      operationId: get_user_by_id
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
  /user/email/{email}:
    summary: Get user by email
    description: Get user by given email.
    get:
      summary: Get user by email
      description: Get user by given email.
      operationId: get_user_by_email
      parameters:
        - name: email
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
  /user/delete/{id}:
    summary: Delete user by id
    description: Delete user by given id.
    delete:
      summary: Delete user by id
      description: Delete user by given id.
      operationId: delete_user_by_id
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
  /user/registerUser:
    summary: Register user
    description: Register new user.
    post:
      summary: Register user
      description: Register new user.
      operationId: register_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "password4"
                email:
                  type: string
                  format: email
                  example: "user4@example.com"
                first_name:
                  type: string
                  example: "Richie"
                last_name:
                  type: string
                  example: "Hales"
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
  /user/updateUser/{id}:
    summary: Update user
    description: Update current user details by given id.
    put:
      summary: Update user
      description: Update current user details by given id.
      operationId: update_user_by_id
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "password4-Updated"
                email:
                  type: string
                  format: email
                  example: "user4@example.com-Updated"
                first_name:
                  type: string
                  example: "Richie-Updated"
                last_name:
                  type: string
                  example: "Hales-Updated"
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
  /cart:
    summary: Get all carts
    description: Retrieves all carts.
    get:
      summary: Get all carts
      description: Retrieves all carts.
      operationId: get_all_carts
      responses:
        default:
          description: Default error sample response
      tags:
        - Cart
  /cart/{id}:
    summary: Get cart by user_id
    description: Retrieves cart by given user_id
    get:
      summary: Get cart by user_id
      description: Retrieves cart by given user_id
      operationId: get_cart_by_user_id
      parameters:
        - name: id
          in: path
          description: user_id for cart required
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Cart
  /cart/addUserAndProduct:
    summary: Add product to cart
    description: Adds a product to the cart for a specific user by user_id.
    post:
      summary: Add product to cart
      description: Adds a product to the cart for a specific user by user_id.
      operationId: add_product_to_cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: ID of the user
                  example: 1
                productId:
                  type: integer
                  description: ID of the product
                  example: 2
                quantity:
                  type: integer
                  description: Quantity of the product to add to the cart
                  example: 3
      responses:
        default:
          description: Default error sample response
      tags:
        - Cart
  /cart/updateBasket/{id}:
    summary: Update basket
    description: Update cart by id.
    put:
      summary: Update cart
      description: Update cart by id.
      operationId: update_cart_by_id
      parameters:
        - name: id
          in: path
          description: ID for the cart
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cart_id:
                  type: integer
                  description: ID of the cart
                  example: 1
                product_id:
                  type: integer
                  description: ID of the product
                  example: 2
                quantity:
                  type: integer
                  description: Quantity of the product in the cart
                  example: 100
      responses:
        default:
          description: Default error sample response
      tags:
        - Cart
  /cart/updateBasket/delete/{id}:
    summary: Delete cart by id
    description: Delete cart by given id.
    delete:
      summary: Delete cart by id
      description: Delete cart by given id.
      operationId: delete_cart_by_id
      parameters:
        - name: id
          in: path
          description: id for cart
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Cart
  /order:
    summary: Get all orders
    description: Retrieves all orders
    get:
      summary: Get all orders
      description: Retrieves all orders
      operationId: get_all_orders
      responses:
        default:
          description: Default error sample response
      tags:
        - Orders
  /order/{id}:
    summary: Get order by id
    description: Retrieves order with given id.
    get:
      summary: Get order by user_id
      description: Retrieves order with given user_id.
      operationId: get_order_by_id
      parameters:
        - name: id
          in: path
          description: user_id for order required
          required: true
          schema:
            type: integer
      responses:
        default:
          description: Default error sample response
      tags:
        - Orders
  /order/copyBasketToOrders:
    summary: Move from cart to order - basketId
    description: Copy from cart to order when purchased by basket id.
    post:
      summary: Move from cart to order - basketId
      description: Copy from cart to order when purchased by basket id.
      operationId: copy_cart_to_order_by_basket_id
      requestBody:
        description: The basket ID to copy to orders
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                basketId:
                  type: integer
                  example: 1
      responses:
        default:
          description: Default error sample response
      tags:
        - Orders
  /order/copyBasketToOrdersUserId:
    summary: Move from cart to order - userId
    description: Copy from cart to order when purchased by user id.
    post:
      summary: Move from cart to order - userId
      description: Copy from cart to order when purchased by user id.
      operationId: copy_cart_to_order_by_user_id
      requestBody:
        description: The user ID to copy to orders
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 1
      responses:
        default:
          description: Default error sample response
      tags:
        - Orders

